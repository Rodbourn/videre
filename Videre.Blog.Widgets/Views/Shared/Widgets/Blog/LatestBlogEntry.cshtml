@using Videre.Core.Extensions;
@using CoreModels = Videre.Core.Models;
@using Models = Videre.Blog.Widgets.Models;
@using Videre.Core.Services;
@model CoreModels.Widget
@{    
    var blog = Model.GetContent<Models.Blog>();
    var showTitle = Model.GetAttribute("ShowBlogTitle", "Yes") == "Yes";
    
    if (blog != null)
    {
        var entry = blog.Entries.Where(e => e.IsPublished).OrderByDescending(e => e.PostDate.HasValue ? e.PostDate.Value : DateTime.MinValue).FirstOrDefault();
        var blogUrl = Videre.Blog.Widgets.Services.Blog.GetBlogUrl(blog.Id, "");

       
    <div id="@Model.GetId("Widget")" class="ui-widget @Model.Css" style="@Model.Style">
        @{Html.RenderPartial("WidgetHeader", Model);}

        @if (showTitle)
        {
            <a href="@blogUrl">@blog.Name</a>
        }

        @if (entry != null)
        {
            var text = !string.IsNullOrEmpty(entry.Summary) ? entry.Summary : (!string.IsNullOrEmpty(entry.Body) ? entry.Body : "");    //todo: helper?
            text = text.Length > 100 ? text.Substring(0, 100) : text;
            <h5>@Html.Raw(!string.IsNullOrEmpty(entry.TitleImageUrl) ? string.Format("<img src=\"{0}\" />", entry.TitleImageUrl) : "")@entry.Title</h5>
            <p>@Html.Raw(text) <a href="@Videre.Blog.Widgets.Services.Blog.GetBlogUrl(blog.Id, entry.Url)">@Model.GetText("ReadMore.Text", "Read More")</a></p>
        }
    </div>

    }
}
