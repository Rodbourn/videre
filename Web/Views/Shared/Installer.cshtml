@using Videre.Core.Extensions;
@using CoreModels = Videre.Core.Models;
@model CoreModels.View
@{
    //Html.RegisterStylesheet(string.Format("~/Content/Layouts/General.css"), true);

    Html.RegisterControlPresenter(Model, "videre.widgets.installer");
    
}

@functions
{
    bool IsRequiredPackage(CoreModels.Package package)
    {
        return package.Name.Contains("Videre Core") || package.Name.Contains("Bootstrap");
    }

}

<!DOCTYPE HTML>
<html>
<head>
    <title>@(!string.IsNullOrEmpty(ViewBag.Title) ? ViewBag.Title : "Videre")</title>

    @{Html.RenderLayoutHeader();}
</head>
<body style="padding-top: 40px;">
    <div class="container">
        <h1 class="videre-font">Videre</h1>
        <div class="content" style="min-height: 500px;" id="@Model.GetId("Widget")">
            @{Html.RenderPartial("WidgetHeader", Model);}

            <form class="form-horizontal">
            <fieldset>
                <legend>Portal<small> - Choose the packages you wish to install</small></legend>
                <div class="control-group">
                    <label class="control-label" for="optionsCheckboxList">Packages</label>
                    <div class="controls" id="@Model.GetId("Packages")">
                        @foreach (var package in Videre.Core.Services.Package.GetNewestAvailablePackages())
                        {
                            <label class="checkbox" title="@package.Description">
                                <input type="checkbox" value="@package.Name" checked="checked" @(IsRequiredPackage(package) ? "disabled=\"true\"" : "") >
                                @package.Name (v @package.Version)
                            </label>
                        }
                    </div>
                </div>
            </fieldset>
@if (!Videre.Core.Services.Account.ReadOnly)
{
            <fieldset id="@Model.GetId("AdminUser")">
                <legend>Admin User<small> - Enter the user information for the portal administrator</small></legend>
                @Html.InputControlGroup(Model, "txtUserName", "UserName.Text", "UserName", "Name", required: true, disableAutoComplete: true)
                @Html.InputControlGroup(Model, "txtEmail", "Email.Text", "Email", "Email", required: true, inputType: "email", disableAutoComplete: true)
                @Html.InputControlGroup(Model, "txtPassword", "Password.Text", "Password", "Password", required: true, inputType: "password" , disableAutoComplete: true)
                @Html.InputControlGroup(Model, "txtPassword2", "ConfirmPassword.Text", "Confirm Password", new Dictionary<string, string>() { { "validation-matches-match", Model.GetId("txtPassword") }, {"validation-matches-message", string.Format(Model.GetPortalText("MustMatch.Text", "Must match {0} entered above"), "password")} }, false, inputType: "password", disableAutoComplete: true)
            </fieldset>
}
            </form>
        </div>
        <div class="videre actions form-actions">
            <a class="btn btn-primary" id="@Model.GetId("btnInstall")">Install</a>
        </div>

    </div>
    @{Html.RenderLayoutDeferred();}
</body>
