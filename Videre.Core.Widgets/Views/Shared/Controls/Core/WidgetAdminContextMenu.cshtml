@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using Models = Videre.Core.Models;
@using System.Web.Mvc.Html;
@using Videre.Core.Services;

@model Models.Widget
@{
    Model.ContentJson = Model.GetContentJson(); //pull potential content
    var editorModel = new Models.Control("Core")
    {
        ClientId = Portal.NextClientId()
    };

    Html.RegisterControlPresenter(editorModel, "videre.widgets.widgetadmincontextmenu", new Dictionary<string, object>(){
            {"templateId", Portal.CurrentTemplate.Id},
            {"layoutId", Portal.CurrentTemplate.LayoutId},
            {"widget", Model},
            {"manifest", Model.Manifest},
            {"containerId", Model.GetId("Widget")}
        });
    Html.RenderWidgetEditor(Model.Manifest);
    
}
<div id="@editorModel.GetId("Widget")" class="dropdown" style="position: absolute; z-index: 10000">
    <a class="dropdown-toggle" data-toggle="dropdown" style="padding: 0"></a>
    <ul class="dropdown-menu">
        @if (ViewBag.ContentAdmin != null && ViewBag.ContentAdmin) { <li><a data-action="editwidget"><span class="glyphicon glyphicon-pencil"></span> @editorModel.GetPortalText("EditWidget.Text", "Edit Widget")</a></li>}
        <li><a data-action="edit"><span class="glyphicon glyphicon-pencil"></span> @editorModel.GetPortalText("Edit.Text", "Edit")</a></li>
        @if (ViewBag.InlineEdit != null && ViewBag.InlineEdit) { <li><a data-action="inline-edit"><span class="glyphicon glyphicon-pencil"></span> @editorModel.GetPortalText("InlineEdit.Text", "Inline Edit")</a></li>}
    </ul>
</div>
