@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using Models = Videre.Core.Models;
@using System.Web.Mvc.Html;
@using Videre.Core.Services;
@model Models.CommentControl
@{
    var isAdmin = Security.IsActivityAuthorized("Comment", "Administration");
    Html.RegisterControlPresenter(Model, "videre.controls.comments", new Dictionary<string, object>() {
        {"data", Model.Container},
        {"isAdmin", isAdmin}
    });

}
<div id="@Model.GetId("Widget")">
    <fieldset>
        <legend class="videre section-header">@Model.GetText("Comments.Text", "Comments") <span class="badge">@Model.Container.Comments.Where(c => c.ApprovedDate.HasValue).Count()</span></legend>

        <div id="@Model.GetId("Comments")">
        @{foreach (var comment in Model.Container.Comments)
          {
              if (isAdmin || comment.ApprovedDate.HasValue)
              {
            <div class="row @(!comment.ApprovedDate.HasValue ? "alert alert-info" : "")">
                @if (isAdmin)
                {
                    <div class="btn-group pull-right">
                        <a data-action="approve" data-id="@comment.Id" class="btn btn-mini" title="@Model.GetPortalText("Approve.Text", "Approve")"><i class="icon-ok"></i></a>
                        <a data-action="remove" data-id="@comment.Id" class="btn btn-mini" title="@Model.GetPortalText("Remove.Text", "Remove")"><i class="icon-trash"></i></a>
                    </div>
                }
                <blockquote>
                    <p style="font-size: .9em; line-height: 1.1em; min-height: 32px;">
                        <img src="@comment.ImageUrl" style="float: left; margin: 0 5px 5px 0;" />
                        @Html.Raw(Html.Encode(comment.Text).Replace("\n", "<br/>"))
                    </p>
                    <small class="pull-right" style="font-size: .9em;">
                        @comment.Name - @comment.CreatedDate.ToLocalTime()
                    </small>
                </blockquote>
            </div>
              }
          }
        }
        </div>
        <script id="@Model.GetId("CommentTemplate")" type="text/html">
            <div class="row {{:ApprovedDate == null ? 'alert alert-info' : ''}}">
                <div class="btn-group pull-right">
                    {{if ApprovedDate == null}}
                    <a data-action="approve" data-id="{{:Id}}" class="btn btn-mini" title="@Model.GetPortalText("Approve.Text", "Approve")"><i class="icon-ok"></i></a>
                    {{/if}}
                    <a data-action="remove" data-id="{{:Id}}" class="btn btn-mini" title="@Model.GetPortalText("Remove.Text", "Remove")"><i class="icon-trash"></i></a>
                </div>
                <blockquote>
                    <p style="font-size: .9em; line-height: 1.1em; min-height: 32px;">
                        <img src="{{:ImageUrl}}" style="float: left; margin: 0 5px 5px 0;" />
                        {{:Text}}
                    </p>
                    <small class="pull-right" style="font-size: .9em;">
                        {{:Name}} - {{:~formatDateTime(CreatedDate)}}
                    </small>
                </blockquote>
            </div>
        </script>


        <div class="row well">
            @{Html.RenderPartial("WidgetHeader", Model);}
            <div id="@Model.GetId("CommentContainer")">
                @Html.InputControlGroup(Model, "txtName", "Name.Text", "Name", "Name", "input-xlarge", required: true)
                @Html.InputControlGroup(Model, "txtEmail", "Email.Text", "Email", "Email", "input-xlarge")
                @Html.TextAreaControlGroup(Model, "txtComment", "Comment.Text", "Comment", "Text", inputCss: "input-xlarge", required: true)
                <a id="@Model.GetId("btnAddComment")" class="btn"><i class="icon-edit"></i>@Model.GetText("Post.Text", "Post")</a>
            </div>
        </div>
    </fieldset>
</div>

