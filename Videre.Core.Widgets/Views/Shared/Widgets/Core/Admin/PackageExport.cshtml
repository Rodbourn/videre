@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using CoreModels = Videre.Core.Models;
@using Videre.Core.Services;
@using Bootstrap = Videre.Core.Extensions.Bootstrap;
@model CoreModels.SubWidget
@{
    Html.RegisterWebReferenceGroup("datatables");
    Html.RegisterWebReferenceGroup("fileuploader");

    var props = new Dictionary<string, object>() { { "newManifest", new CoreModels.Package() } };
    Html.RegisterControlPresenter(Model, "videre.widgets.admin.packageexport", props);
    var providers = ImportExport.GetRegisteredProviders();
    
    

    <div id="@Model.GetId("Widget")">
        @{Html.RenderPartial("WidgetHeader", Model);}

        <p>@Html.Raw(Model.GetText("Instructions.Text", "Export Package allows you to craft your own package, including the content you wish.  You can then tweak the content added by editing the JSON directly."))</p>

        <div class="container">
            <div class="row">
                <div class="col-md-2">
                    <div class="list-group" id="@Model.GetId("ExportTypeList")">
                        @foreach (var provider in providers)
                        {
                            <a data-filter="@provider" class="list-group-item">@provider</a>
                        }
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="row">
                        <div class="col-md-12">
                            <div id="@Model.GetId("PackageCtr")" class="well">
                                <h5>@Model.GetText("Package.Text", "Package") - <span data-column="Name"></span><span data-column="Version"></span></h5>
                                @Html.Bootstrap().Button().DataAttribute("action", "edit-package").Text("EditPackage.Text", "Edit Package").Icon("glyphicon glyphicon-edit")
                                @Html.Bootstrap().Button().DataAttribute("action", "load-package").Text("LoadPackage.Text", "Load Package").Icon("glyphicon glyphicon-download")
                                @Html.Bootstrap().Button().DataAttribute("action", "new-package").Text("NewPackage.Text", "New Package").Icon("glyphicon glyphicon-star")
                                @Html.Bootstrap().Button().DataAttribute("action", "download-package").Text("DownloadPackage.Text", "Download Package").Icon("glyphicon glyphicon-download-alt")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="@Model.GetId("ItemListCtr")" class="col-md-12">
                            <table class="table table-striped table-bordered table-condensed" id="@Model.GetId("ItemTable")">
                                <thead>
                                    <tr>
                                        <th style="width: 31px"></th>
                                        <th>@Model.GetText("Name.Text", "Name")</th>
                                        <th>@Model.GetText("Preview.Text", "Preview")</th>
                                    </tr>
                                </thead>
                                <tbody id="@Model.GetId("ItemList")"></tbody>
                            </table>
                            <script id="@Model.GetId("ItemListTemplate")" type="text/html">
                                <tr>
                                    <td>{{if Included == false}}
                                            @Html.Bootstrap().Button().DataAttribute("id", "{{:Id}}").DataAttribute("action", "add").Icon("glyphicon glyphicon-plus").ButtonSize(BootstrapUnits.ButtonSize.ExtraSmall)
                                        {{/if}}
                                    </td>
                                    <td>{{:Name}}</td>
                                    <td>{{:Preview}}</td>
                                </tr>
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="@Model.GetId("PackageDialog")" data-target="#@Model.GetId("PackageDialog")" class="modal fade">
            <div class="modal-dialog" style="width: 900px;">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <span class="glyphicon glyphicon-gift"></span> @Model.GetText("EditPackage.Text", "Edit Package")
                    </div>
                    <div class="modal-body">
                        @{Html.RenderPartial("WidgetHeader", Model);}
                        @(Html.Bootstrap().Tabs(new List<Bootstrap.Controls.BootstrapTab>() 
                        { 
                            new Bootstrap.Controls.BootstrapTab() { Id = @Model.GetId("ManifestTab"), Text = @Model.GetText("Manifest.Text", "Manifest"), Active = true, Icon = "glyphicon glyphicon-list-alt" },
                            new Bootstrap.Controls.BootstrapTab() { Id = @Model.GetId("ContentTab"), Text = @Model.GetText("Content.Text", "Content"), Icon = "glyphicon glyphicon-book" }
                        }))
                        <div class="tab-content">
                            <div class="tab-pane active" id="@Model.GetId("ManifestTab")">
                                <div class="form-horizontal">
                                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Name.Text", "Name").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Name").Required(), BootstrapUnits.GridSize.MediumDevice9)
                                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Version.Text", "Version").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Version").DataType("number"), BootstrapUnits.GridSize.MediumDevice9)
                                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("FileName.Text", "File Name").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("FileName").Required(), BootstrapUnits.GridSize.MediumDevice9)
                                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Type.Text", "Type").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Type"), BootstrapUnits.GridSize.MediumDevice9)
                                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Source.Text", "Source").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Source"), BootstrapUnits.GridSize.MediumDevice9)
                                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Description.Text", "Description").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextArea().DataColumn("Description"), BootstrapUnits.GridSize.MediumDevice9)
                                </div>
                            </div>
                            <div class="tab-pane" id="@Model.GetId("ContentTab")">
                                <div class="form-horizontal">
                                    @Html.Bootstrap().TextArea("txtPackageContent").Rows(20).GridSize(BootstrapUnits.GridSize.MediumDevice12).Css("videre-code-font-small")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        @Html.Bootstrap().Button("btnPackageOk").ButtonStyle(BootstrapUnits.ButtonStyle.Primary).Text("Ok.Text", "Ok", true)
                        @Html.Bootstrap().Button().Text("Cancel.Text", "Cancel", true).DataAttribute("dismiss", "modal")
                    </div>
                </div>
            </div>
        </div>
    </div>
}
