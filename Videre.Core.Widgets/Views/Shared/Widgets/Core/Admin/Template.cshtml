@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using Models = Videre.Core.Models;
@using System.Web.Mvc.Html;
@using Videre.Core.Services;
@model Models.Widget

@{
    Html.RegisterDataTableScript();
    Html.RegisterTreeScript();

    var manifests = Videre.Core.Services.Portal.GetWidgetManifests();
    var layouts = Videre.Core.Services.UI.GetLayouts();
    var themes = Videre.Core.Services.UI.GetThemes();
    var isLayout = Model.GetAttribute("IsLayout", false);

    Html.RegisterControlPresenter(Model, "videre.widgets.admin.template", new Dictionary<string,object>(){
        {"manifestData", manifests},
        {"layoutData", layouts},
        {"isLayout", isLayout}
    });
}

<div id="@Model.GetId("Widget")">
    @{Html.RenderPartial("WidgetHeader", Model);}
    <fieldset>
        <legend class="videre section-header">@Model.GetText("WidgetTitle.Text", "Template Administration")</legend>
            
        <p>@Html.Raw(Model.GetText("Instructions.Text", "Template administration allows you to create new pages to view along with specifying their layout and widgets.  The general tab allows you to choose the layout, roles, title, and one or more urls to associate with your template.  The layout tabl allows you to drag widgets onto your layout's panes.  Additionally, some widgets like Text/Html provide an editor to put content in when you click the menu and then edit."))</p>
        <br />
        <div class="container">
            <div class="row">
                <div class="span3">
                    <div class="btn-toolbar">
                        <div class="btn-group">
                            <a class="btn btn-small" id="@Model.GetId("btnNew")"><i class="icon-plus"></i> @Model.GetPortalText("NewEntry.Text", "New Entry")</a>
                        </div>
                    </div>
                    <div id="@Model.GetId("Tree")" style="overflow: auto; height: 500px; padding:0; margin:0;" class="span3"></div>
                </div>
                <div id="@Model.GetId("TemplateCtr")" class="span9" style="display: none;">
                    <table class="table table-striped table-bordered table-condensed" id="@Model.GetId("ItemTable")">
                        <thead>
                            <tr>
                                <th style="width: 64px"></th>
                                @{if (!isLayout)
                                {                               
                                <th>@Model.GetText("Title.Text", "Title")</th>
                                }}
                                <th>@Model.GetText("Layout.Text", "Layout")</th>
                            </tr>
                        </thead>
                        <tbody id="@Model.GetId("ItemList")"></tbody>
                    </table>
                    <script id="@Model.GetId("ItemListTemplate")" type="text/html">
                        <tr>
                            <td>
                                <a class="btn btn-mini" data-id="{{:Id}}" data-action="edit"><i class="icon-pencil"></i></a>
                                <a class="btn btn-mini" data-id="{{:Id}}" data-action="delete"><i class="icon-trash"></i></a>
                            </td>
                            @{if (!isLayout)
                            {                               
                            <td>{{:Title}}</td>
                            }}
                            <td>{{:LayoutName}}</td>
                        </tr>
                    </script>
                </div>
                <div id="@Model.GetId("TemplateEdit")" class="span9" style="display: none;">
                    @{Html.RenderPartial("WidgetHeader", Model);}
                            
                    <ul id="@Model.GetId("Tabs")" class="nav nav-tabs">
                        <li class="active"><a href="#@Model.GetId("GeneralTab")" data-toggle="tab">@Model.GetText("General.Text", "General")</a></li>
                        <li><a href="#@Model.GetId("LayoutTab")" data-toggle="tab">@Model.GetText("Layout.Text", "Layout")</a></li>
                    </ul>

                    <div class="tab-content" style="overflow: auto; height: 420px;">
                        <div class="form-horizontal tab-pane active" id="@Model.GetId("GeneralTab")">
                            @Html.DropDownControlGroup(Model, "ddlPortal", "Portal.Text", "Portal", "PortalId", Videre.Core.Services.Portal.GetPortals().Select(p => new SelectListItem() { Value = p.Id, Text = p.Name }), "span6")
                            @Html.DropDownControlGroup(Model, "ddlLayout", "Layout.Text", "Layout", "LayoutName", layouts.Select(l => new SelectListItem() { Value = l.Name, Text = l.Name }), "span6")
                            @Html.DropDownControlGroup(Model, "ddlTheme", "Theme.Text", "Theme", "ThemeName", themes.Select(l => new SelectListItem() { Value = l.Name, Text = l.Name }), "span6", new SelectListItem() { Text = "", Value = "" })
                            @Html.RoleControlGroup(Model, "ddlRoles", "Roles.Text", "Roles", "Roles", inputCss: "span6")
                            @Html.AuthorizedControlGroup(Model, "ddlAuthentication", "Authentication.Text", "Authentication", "Authenticated")

                            @{if (!isLayout)
                            {                               
                                @Html.InputControlGroup(Model, "txtTitle", "Title.Text", "Title", "Title", "span6")
                                @Html.TextAreaControlGroup(Model, "txtUrls", "Urls.Text", "Urls", "Urls", "list", "span6", 3)
                            }}
                        </div>
                        <div class="form-horizontal tab-pane" id="@Model.GetId("LayoutTab")">
                            <div class="row">
                                <div class="accordion span3" id="@Model.GetId("WidgetToolbar")" style="margin-bottom: 0;">
                                    <div class="accordion-group">
                                    @{
                                        var containerId = 0;
                                        var categories = manifests.Select(m => m.Category).Distinct().OrderBy(m => m).ToList();
                                        var minHeight = 420 - (categories.Count * 32);
                                    foreach (var c in categories)
                                    {
                                        var category = string.IsNullOrEmpty(c) ? "(none)" : c;
                                        containerId++;
                                        <div class="accordion-heading ui-state-default">
                                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#@Model.GetId("WidgetToolbar")" href="@("#collapse" + containerId)" style="padding: 5px;">
                                                <i class="icon-th-list"></i> @category
                                            </a>
                                        </div>
                                        <div id="@("collapse" + containerId)" class="accordion-body collapse @(containerId == 1 ? "in" : "")">
                                            <div class="accordion-inner videre dark-fill" style="padding: 2px; min-height: @(minHeight)px;">
                                                    <div>
                                        @foreach(var m in manifests.Where(m => m.Category == c).OrderBy(m => m.Name))
                                        {
                                                        <div class="btn btn-mini widget-manifest" data-manifestid="@m.Id" style="width: 200px; text-align: left; margin-bottom: 1px;"><i class="icon-cog"></i> @m.Title</div>
                                        }
                                                    </div>
                                            </div>
                                        </div>
                                    }}
                                    </div>
                                </div>
                                <div class="span6 control-group designer-panes" id="@Model.GetId("Panes")" style="margin-left: 2px;">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <a class="btn btn-primary" id="@Model.GetId("btnSave")">@Model.GetPortalText("Save.Text", "Save")</a>
                        <a class="btn" id="@Model.GetId("btnCancel")">@Model.GetPortalText("Cancel.Text", "Cancel")</a>
                    </div>
                </div>
                @{foreach (var manifest in manifests)
                    {
                        Html.RenderWidgetEditor(manifest);
                    }
                }
            </div>
            <div class="videre actions form-actions">
                <a class="btn" href="@Url.Content("~/core/Portal/ExportTemplates")"><i class="icon-file"></i> @Model.GetPortalText("ExportTemplates.Text", "Export Templates")</a>
            </div>

        </div>
    </fieldset>
</div>

