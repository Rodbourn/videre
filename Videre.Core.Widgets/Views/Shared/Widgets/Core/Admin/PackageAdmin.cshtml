@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using Models = Videre.Core.Models;
@using System.Web.Mvc.Html;
@using Videre.Core.Services;
@model Models.Widget

@{
    Html.RegisterWebReferenceGroup("datatables");
    Html.RegisterWebReferenceGroup("fileuploader");
    //var installedPackages = Videre.Core.Services.Package.GetInstalledPackages();
    //var availablePackages = Videre.Core.Services.Package.GetAvailablePackages();
    
    Html.RegisterControlPresenter(Model, "videre.widgets.admin.packageadmin");//, new Dictionary<string, object>() {
    //    {"installedPackages", installedPackages },
    //    {"availablePackages", availablePackages },
    //});
}

<div id="@Model.GetId("Widget")">
    @{Html.RenderPartial("WidgetHeader", Model);}
    
    @{Html.RenderPartial("WidgetSectionHeader", Model, new ViewDataDictionary(new { SectionHeader = Model.GetText("WidgetTitle.Text", "Package Administration") }));}
    <p>@Html.Raw(Model.GetText("Instructions.Text", "Package Administration allows you to view installed packages, along with installing new ones."))</p>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered table-condensed" id="@Model.GetId("ItemTable")">
                    <thead>
                        <tr>
                            <th style="width: 100px;"></th>
                            <th>@Model.GetText("Name.Text", "Name")</th>
                            <th>@Model.GetText("Type.Text", "Type")</th>
                            <th>@Model.GetText("Version.Text", "Version")</th>
                            <th>@Model.GetText("InstalledPackageDate.Text", "Installed Package Date")</th>
                            <th>@Model.GetText("InstallDate.Text", "Install Date")</th>
                            <th>@Model.GetText("AvailablePackageDate.Text", "Available Package Date")</th>
                            <th>@Model.GetText("RemotePackageDate.Text", "Remote Package Date")</th>
                        </tr>
                    </thead>
                    <tbody id="@Model.GetId("ItemList")"></tbody>
                </table>
                <script id="@Model.GetId("ItemListTemplate")" type="text/html">
                    <tr>
                        <td style="white-space: nowrap;">
                            {{if installedDate != null || availPackageDate != null}}
                            <div class="btn-group" style="float: right">
                                @Html.Bootstrap().Button().Text("Action.Text", "Action").ButtonSize(BootstrapUnits.ButtonSize.ExtraSmall)
                                @Html.Bootstrap().Button().DataAttribute("toggle", "dropdown").Css("dropdown-toggle").Icon("caret").ButtonSize(BootstrapUnits.ButtonSize.ExtraSmall)
                                <ul class="dropdown-menu">
                                    {{if installedDate != null}}
                                    <li><a data-id="{{:id}}" data-action="uninstall"><i class="glyphicon glyphicon-remove"></i> @Model.GetText("Uninstall.Text", "Uninstall")</a></li>
                                    {{/if}}
                                    {{if availPackageDate != null}}
                                    <li><a data-id="{{:id}}" data-action="install"><i class="glyphicon glyphicon-download-alt"></i> @Model.GetText("Install.Text", "Install Package")</a></li>
                                    <li><a data-id="{{:id}}" data-action="remove"><i class="glyphicon glyphicon-remove"></i> @Model.GetText("Remove.Text", "Remove Package")</a></li>
                                    <li><a data-id="{{:id}}" data-action="publish"><i class="glyphicon glyphicon-globe"></i> {{:published ? '@Model.GetText("UnPublish.Text", "Un-Publish")' : '@Model.GetText("Publish.Text", "Publish")'}}</a></li>
                                    {{/if}}
                                    {{if remoteDate != null}}
                                    <li><a data-id="{{:id}}" data-action="download"><i class="glyphicon glyphicon-download"></i> @Model.GetText("DownloadPackage.Text", "Download Package")</a></li>
                                    {{/if}}
                                </ul>
                            </div>
                            {{/if}}
                        </td>
                        <td style="white-space: nowrap;"><span title="{{:source}} - {{:desc}}">{{:name}}</span></td>
                        <td>{{:type}}</td>
                        <td style="white-space: nowrap;">{{:version}}</td>
                        <td style="white-space: nowrap;">{{:~formatDateTime(installedPackageDate)}}</td>
                        <td style="white-space: nowrap;">
                            {{:~formatDateTime(installedDate)}}
                        </td>
                        <td style="white-space: nowrap;">
                            {{:~formatDateTime(availPackageDate)}}
                        </td>
                        <td style="white-space: nowrap;">
                            {{:~formatDateTime(remoteDate)}}
                        </td>
                    </tr>
                </script>
            </div>
        </div>
        <div class="videre actions form-actions">
            @Html.Bootstrap().Button("btnImport").Text("ImportPackage.Text", "Import Package").Icon("glyphicon glyphicon-gift")
        </div>

    </div>

</div>

