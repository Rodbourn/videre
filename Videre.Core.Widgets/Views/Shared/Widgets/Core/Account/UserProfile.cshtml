@using CodeEndeavors.Extensions;
@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using Videre.Core.Models;
@using System.Web.Mvc.Html;

@using CoreServices = Videre.Core.Services;
@model Videre.Core.Models.Widget

@{
 
    var providers = CoreServices.Authentication.GetExternalAuthenticationProviders().Where(p => p.AllowAssociation).ToList();
    Html.RegisterControlPresenter(Model, "videre.widgets.account.userprofile", new Dictionary<string, object>() { 
        { "data", CoreServices.Account.GetUserProfile() },
        { "customElements", CoreServices.Account.CustomUserElements},
        { "authProviders", providers },
        { "userAuthProviders", CoreServices.Authentication.GetUserAuthenticationProviders(CoreServices.Account.CurrentUser) }
    });
}

<div id="@Model.GetId("Widget")">
    @{Html.RenderPartial("WidgetHeader", Model);}
    @{Html.RenderPartial("WidgetSectionHeader", Model, new ViewDataDictionary(new { SectionHeader = Model.GetText("WidgetTitle.Text", "User Profile") }));}

    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">@Model.GetText("ProfileInfo.Text", "Profile Information")</div>
                <div class="panel-body form-horizontal">
                    <div id="@Model.GetId("StandardElementsCtr")">
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("UserName.Text", "User Name").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().TextBox().DataColumn("Name").Required(), BootstrapUnits.GridSize.MediumDevice8)
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("UserDisplayName.Text", "Display Name").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().TextBox().DataColumn("DisplayName").Required(), BootstrapUnits.GridSize.MediumDevice8)
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Email.Text", "Email").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().Email().DataColumn("Email").Required(), BootstrapUnits.GridSize.MediumDevice8)
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Locale.Text", "Locale").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().TextBox().DataColumn("Locale"), BootstrapUnits.GridSize.MediumDevice3)
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("TimeZone.Text", "Time Zone").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().DropDownList().DataColumn("TimeZone").Options(TimeZoneInfo.GetSystemTimeZones().Select(t => new SelectListItem() { Value = t.StandardName, Text = t.DisplayName }).ToList()), BootstrapUnits.GridSize.MediumDevice8)
                    @if (CoreServices.Authentication.PersistanceProvider != null)
                    {
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Password.Text", "Password").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().Password("txtPassword").DataColumn("Password1").DisableAutoComplete(), BootstrapUnits.GridSize.MediumDevice8)
                    @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("ConfirmPassword.Text", "Confirm Password").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().Password("txtPassword2").DataColumn("Password2").MustMatch("txtPassword").DisableAutoComplete(), BootstrapUnits.GridSize.MediumDevice8)
                    }
                    </div>
                    @if (CoreServices.Account.CustomUserElements.Where(e => e.UserCanEdit).Count() > 0) 
                    {   
                    <div id="@Model.GetId("CustomElementsCtr")">
                    @foreach (var element in CoreServices.Account.CustomUserElements.Where(e => e.UserCanEdit))
                    {
                        if (element.Values != null)
                        {
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label(element.SafeName + ".Text", element.Name).GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().DropDownList().Options(element.Values).DataColumn(element.Name).Required(element.Required), BootstrapUnits.GridSize.MediumDevice8)
                        }
                        else
                        {
                            if (element.DataType == typeof(bool))
                            {
                                @Html.Bootstrap().FormGroup(Html.Bootstrap().Label(element.SafeName + ".Text", element.Name).GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().CheckBox().DataColumn(element.Name).Required(element.Required).Checked(element.DefaultValue == "true"), BootstrapUnits.GridSize.MediumDevice8)
                            }
                            else 
                            {
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label(element.SafeName + ".Text", element.Name).GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().TextBox().DataColumn(element.Name).Required(element.Required), BootstrapUnits.GridSize.MediumDevice8)
                            }
                        }
                    }
                    </div>
                    }
                </div>
            </div>
        </div>
        @if (providers.Count > 0)
        {
            <div class="col-md-6">
                <div class="panel panel-default" id="@Model.GetId("UnassociatedAuthCtr")" style="display: none;">
                    <div class="panel-heading">@Model.GetText("AssociateAccount.Text", "Associate Account")</div>
                    <div class="panel-body">
                        @foreach (var provider in providers)
                        {
                            if (provider is Videre.Core.Providers.IOAuthAuthenticationProvider)
                            {
                                <a class="btn btn-default" data-authprovider="@provider.Name" data-authprovidertype="oauth" href="@CoreServices.Portal.ResolveUrl(string.Format("~/Core/Account/AssociateOAuthLogin?provider={0}&returnUrl={1}", provider.Name, CoreServices.Portal.ResolveCurrentUrl("")))"><span class="glyphicon glyphicon-plus"></span>&nbsp;@provider.Name</a>
                            }
                            else
                            {
                                <a class="btn btn-default" data-authprovider="@provider.Name" data-authprovidertype="external"><span class="glyphicon glyphicon-plus"></span>&nbsp;@provider.Name</a>
                            }
                        }
                    </div>
                </div>
                <div class="panel panel-default" id="@Model.GetId("AssociatedAuthCtr")" style="display: none;">
                    <div class="panel-heading">@Model.GetText("DisassociateAccount.Text", "Disassociate Account")</div>
                    <div class="panel-body">
                        @foreach (var provider in providers)
                        {
                            <a class="btn btn-default" data-authprovider="@provider.Name"><span class="glyphicon glyphicon-minus"></span>&nbsp;@provider.Name</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="videre-form-actions">
                @Html.Bootstrap().Button("btnSave").ButtonStyle(BootstrapUnits.ButtonStyle.Primary).Text("Save.Text", "Save", true)
            </div>
        </div>
    </div>

    <div id="@Model.GetId("ExternalLoginDialog")" data-target="#@Model.GetId("ExternalLoginDialog")" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <label data-column="AuthenticationProvider"></label> - @Model.GetText("AssociateLogin.Text", "Associate Login")
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("WidgetHeader", Model);}
                    <div class="form-horizontal">
                        @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("UserName.Text", "User Name").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().TextBox().DataColumn("ExternalUser").DisableAutoComplete(), BootstrapUnits.GridSize.MediumDevice8)
                        @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Password.Text", "Password").GridSize(BootstrapUnits.GridSize.MediumDevice4), Html.Bootstrap().Password().DataColumn("ExternalPassword").DisableAutoComplete(), BootstrapUnits.GridSize.MediumDevice8)
                    </div>
                </div>
                <div class="modal-footer">
                    @Html.Bootstrap().Button("btnExternalLogin").ButtonStyle(BootstrapUnits.ButtonStyle.Primary).Text("Login.Text", "Login", true)
                    @Html.Bootstrap().Button().Text("Cancel.Text", "Cancel", true).DataAttribute("dismiss", "modal")
                </div>
            </div>
        </div>
    </div>


</div>

